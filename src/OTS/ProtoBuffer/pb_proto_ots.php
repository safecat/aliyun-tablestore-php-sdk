<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: aliots_datatypes.proto
//   Date: 2016-07-30 07:24:58

namespace com\aliyun\cloudservice\ots2 {

  class ColumnType extends \DrSlump\Protobuf\Enum {
    const INF_MIN = 0;
    const INF_MAX = 1;
    const INTEGER = 2;
    const STRING = 3;
    const BOOLEAN = 4;
    const DOUBLE = 5;
    const BINARY = 6;
  }
}
namespace com\aliyun\cloudservice\ots2 {

  class RowExistenceExpectation extends \DrSlump\Protobuf\Enum {
    const IGNORE = 0;
    const EXPECT_EXIST = 1;
    const EXPECT_NOT_EXIST = 2;
  }
}
namespace com\aliyun\cloudservice\ots2 {

  class OperationType extends \DrSlump\Protobuf\Enum {
    const PUT = 1;
    const DELETE = 2;
  }
}
namespace com\aliyun\cloudservice\ots2 {

  class Direction extends \DrSlump\Protobuf\Enum {
    const FORWARD = 0;
    const BACKWARD = 1;
  }
}
namespace com\aliyun\cloudservice\ots2 {

  class Error extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $code = null;
    
    /**  @var string */
    public $message = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.Error');

      // REQUIRED STRING code = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "code";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // OPTIONAL STRING message = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "message";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <code> has a value
     *
     * @return boolean
     */
    public function hasCode(){
      return $this->_has(1);
    }
    
    /**
     * Clear <code> value
     *
     * @return \com\aliyun\cloudservice\ots2\Error
     */
    public function clearCode(){
      return $this->_clear(1);
    }
    
    /**
     * Get <code> value
     *
     * @return string
     */
    public function getCode(){
      return $this->_get(1);
    }
    
    /**
     * Set <code> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\Error
     */
    public function setCode( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <message> has a value
     *
     * @return boolean
     */
    public function hasMessage(){
      return $this->_has(2);
    }
    
    /**
     * Clear <message> value
     *
     * @return \com\aliyun\cloudservice\ots2\Error
     */
    public function clearMessage(){
      return $this->_clear(2);
    }
    
    /**
     * Get <message> value
     *
     * @return string
     */
    public function getMessage(){
      return $this->_get(2);
    }
    
    /**
     * Set <message> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\Error
     */
    public function setMessage( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class ColumnSchema extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var int - \com\aliyun\cloudservice\ots2\ColumnType */
    public $type = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.ColumnSchema');

      // REQUIRED STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED ENUM type = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "type";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ColumnType';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnSchema
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\ColumnSchema
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <type> has a value
     *
     * @return boolean
     */
    public function hasType(){
      return $this->_has(2);
    }
    
    /**
     * Clear <type> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnSchema
     */
    public function clearType(){
      return $this->_clear(2);
    }
    
    /**
     * Get <type> value
     *
     * @return int - \com\aliyun\cloudservice\ots2\ColumnType
     */
    public function getType(){
      return $this->_get(2);
    }
    
    /**
     * Set <type> value
     *
     * @param int - \com\aliyun\cloudservice\ots2\ColumnType $value
     * @return \com\aliyun\cloudservice\ots2\ColumnSchema
     */
    public function setType( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class ColumnValue extends \DrSlump\Protobuf\Message {

    /**  @var int - \com\aliyun\cloudservice\ots2\ColumnType */
    public $type = null;
    
    /**  @var int */
    public $v_int = null;
    
    /**  @var string */
    public $v_string = null;
    
    /**  @var boolean */
    public $v_bool = null;
    
    /**  @var float */
    public $v_double = null;
    
    /**  @var string */
    public $v_binary = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.ColumnValue');

      // REQUIRED ENUM type = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "type";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ColumnType';
      $descriptor->addField($f);

      // OPTIONAL INT64 v_int = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "v_int";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING v_string = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "v_string";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL v_bool = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "v_bool";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL DOUBLE v_double = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "v_double";
      $f->type      = \DrSlump\Protobuf::TYPE_DOUBLE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BYTES v_binary = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "v_binary";
      $f->type      = \DrSlump\Protobuf::TYPE_BYTES;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <type> has a value
     *
     * @return boolean
     */
    public function hasType(){
      return $this->_has(1);
    }
    
    /**
     * Clear <type> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function clearType(){
      return $this->_clear(1);
    }
    
    /**
     * Get <type> value
     *
     * @return int - \com\aliyun\cloudservice\ots2\ColumnType
     */
    public function getType(){
      return $this->_get(1);
    }
    
    /**
     * Set <type> value
     *
     * @param int - \com\aliyun\cloudservice\ots2\ColumnType $value
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function setType( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <v_int> has a value
     *
     * @return boolean
     */
    public function hasVInt(){
      return $this->_has(2);
    }
    
    /**
     * Clear <v_int> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function clearVInt(){
      return $this->_clear(2);
    }
    
    /**
     * Get <v_int> value
     *
     * @return int
     */
    public function getVInt(){
      return $this->_get(2);
    }
    
    /**
     * Set <v_int> value
     *
     * @param int $value
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function setVInt( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <v_string> has a value
     *
     * @return boolean
     */
    public function hasVString(){
      return $this->_has(3);
    }
    
    /**
     * Clear <v_string> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function clearVString(){
      return $this->_clear(3);
    }
    
    /**
     * Get <v_string> value
     *
     * @return string
     */
    public function getVString(){
      return $this->_get(3);
    }
    
    /**
     * Set <v_string> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function setVString( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <v_bool> has a value
     *
     * @return boolean
     */
    public function hasVBool(){
      return $this->_has(4);
    }
    
    /**
     * Clear <v_bool> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function clearVBool(){
      return $this->_clear(4);
    }
    
    /**
     * Get <v_bool> value
     *
     * @return boolean
     */
    public function getVBool(){
      return $this->_get(4);
    }
    
    /**
     * Set <v_bool> value
     *
     * @param boolean $value
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function setVBool( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <v_double> has a value
     *
     * @return boolean
     */
    public function hasVDouble(){
      return $this->_has(5);
    }
    
    /**
     * Clear <v_double> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function clearVDouble(){
      return $this->_clear(5);
    }
    
    /**
     * Get <v_double> value
     *
     * @return float
     */
    public function getVDouble(){
      return $this->_get(5);
    }
    
    /**
     * Set <v_double> value
     *
     * @param float $value
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function setVDouble( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <v_binary> has a value
     *
     * @return boolean
     */
    public function hasVBinary(){
      return $this->_has(6);
    }
    
    /**
     * Clear <v_binary> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function clearVBinary(){
      return $this->_clear(6);
    }
    
    /**
     * Get <v_binary> value
     *
     * @return string
     */
    public function getVBinary(){
      return $this->_get(6);
    }
    
    /**
     * Set <v_binary> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function setVBinary( $value){
      return $this->_set(6, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class Column extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\ColumnValue */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.Column');

      // REQUIRED STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED MESSAGE value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ColumnValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param \com\aliyun\cloudservice\ots2\ColumnValue $value
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function setValue(\com\aliyun\cloudservice\ots2\ColumnValue $value){
      return $this->_set(2, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class Row extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $primary_key_columns = array();
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $attribute_columns = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.Row');

      // REPEATED MESSAGE primary_key_columns = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "primary_key_columns";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      // REPEATED MESSAGE attribute_columns = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "attribute_columns";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <primary_key_columns> has a value
     *
     * @return boolean
     */
    public function hasPrimaryKeyColumns(){
      return $this->_has(1);
    }
    
    /**
     * Clear <primary_key_columns> value
     *
     * @return \com\aliyun\cloudservice\ots2\Row
     */
    public function clearPrimaryKeyColumns(){
      return $this->_clear(1);
    }
    
    /**
     * Get <primary_key_columns> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getPrimaryKeyColumns($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <primary_key_columns> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\Row
     */
    public function setPrimaryKeyColumns(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <primary_key_columns>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getPrimaryKeyColumnsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <primary_key_columns>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\Row
     */
    public function addPrimaryKeyColumns(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <attribute_columns> has a value
     *
     * @return boolean
     */
    public function hasAttributeColumns(){
      return $this->_has(2);
    }
    
    /**
     * Clear <attribute_columns> value
     *
     * @return \com\aliyun\cloudservice\ots2\Row
     */
    public function clearAttributeColumns(){
      return $this->_clear(2);
    }
    
    /**
     * Get <attribute_columns> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getAttributeColumns($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <attribute_columns> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\Row
     */
    public function setAttributeColumns(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <attribute_columns>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getAttributeColumnsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <attribute_columns>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\Row
     */
    public function addAttributeColumns(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(2, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class TableMeta extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\ColumnSchema[]  */
    public $primary_key = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.TableMeta');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REPEATED MESSAGE primary_key = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "primary_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ColumnSchema';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableMeta
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\TableMeta
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <primary_key> has a value
     *
     * @return boolean
     */
    public function hasPrimaryKey(){
      return $this->_has(2);
    }
    
    /**
     * Clear <primary_key> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableMeta
     */
    public function clearPrimaryKey(){
      return $this->_clear(2);
    }
    
    /**
     * Get <primary_key> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\ColumnSchema
     */
    public function getPrimaryKey($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <primary_key> value
     *
     * @param \com\aliyun\cloudservice\ots2\ColumnSchema $value
     * @return \com\aliyun\cloudservice\ots2\TableMeta
     */
    public function setPrimaryKey(\com\aliyun\cloudservice\ots2\ColumnSchema $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <primary_key>
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnSchema[]
     */
    public function getPrimaryKeyList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <primary_key>
     *
     * @param \com\aliyun\cloudservice\ots2\ColumnSchema $value
     * @return \com\aliyun\cloudservice\ots2\TableMeta
     */
    public function addPrimaryKey(\com\aliyun\cloudservice\ots2\ColumnSchema $value){
     return $this->_add(2, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class Condition extends \DrSlump\Protobuf\Message {

    /**  @var int - \com\aliyun\cloudservice\ots2\RowExistenceExpectation */
    public $row_existence = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.Condition');

      // REQUIRED ENUM row_existence = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "row_existence";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\RowExistenceExpectation';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <row_existence> has a value
     *
     * @return boolean
     */
    public function hasRowExistence(){
      return $this->_has(1);
    }
    
    /**
     * Clear <row_existence> value
     *
     * @return \com\aliyun\cloudservice\ots2\Condition
     */
    public function clearRowExistence(){
      return $this->_clear(1);
    }
    
    /**
     * Get <row_existence> value
     *
     * @return int - \com\aliyun\cloudservice\ots2\RowExistenceExpectation
     */
    public function getRowExistence(){
      return $this->_get(1);
    }
    
    /**
     * Set <row_existence> value
     *
     * @param int - \com\aliyun\cloudservice\ots2\RowExistenceExpectation $value
     * @return \com\aliyun\cloudservice\ots2\Condition
     */
    public function setRowExistence( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class CapacityUnit extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $read = null;
    
    /**  @var int */
    public $write = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.CapacityUnit');

      // OPTIONAL INT32 read = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "read";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 write = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "write";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <read> has a value
     *
     * @return boolean
     */
    public function hasRead(){
      return $this->_has(1);
    }
    
    /**
     * Clear <read> value
     *
     * @return \com\aliyun\cloudservice\ots2\CapacityUnit
     */
    public function clearRead(){
      return $this->_clear(1);
    }
    
    /**
     * Get <read> value
     *
     * @return int
     */
    public function getRead(){
      return $this->_get(1);
    }
    
    /**
     * Set <read> value
     *
     * @param int $value
     * @return \com\aliyun\cloudservice\ots2\CapacityUnit
     */
    public function setRead( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <write> has a value
     *
     * @return boolean
     */
    public function hasWrite(){
      return $this->_has(2);
    }
    
    /**
     * Clear <write> value
     *
     * @return \com\aliyun\cloudservice\ots2\CapacityUnit
     */
    public function clearWrite(){
      return $this->_clear(2);
    }
    
    /**
     * Get <write> value
     *
     * @return int
     */
    public function getWrite(){
      return $this->_get(2);
    }
    
    /**
     * Set <write> value
     *
     * @param int $value
     * @return \com\aliyun\cloudservice\ots2\CapacityUnit
     */
    public function setWrite( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class ReservedThroughputDetails extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\CapacityUnit */
    public $capacity_unit = null;
    
    /**  @var int */
    public $last_increase_time = null;
    
    /**  @var int */
    public $last_decrease_time = null;
    
    /**  @var int */
    public $number_of_decreases_today = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.ReservedThroughputDetails');

      // REQUIRED MESSAGE capacity_unit = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "capacity_unit";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\CapacityUnit';
      $descriptor->addField($f);

      // REQUIRED INT64 last_increase_time = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "last_increase_time";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // OPTIONAL INT64 last_decrease_time = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "last_decrease_time";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REQUIRED INT32 number_of_decreases_today = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "number_of_decreases_today";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <capacity_unit> has a value
     *
     * @return boolean
     */
    public function hasCapacityUnit(){
      return $this->_has(1);
    }
    
    /**
     * Clear <capacity_unit> value
     *
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughputDetails
     */
    public function clearCapacityUnit(){
      return $this->_clear(1);
    }
    
    /**
     * Get <capacity_unit> value
     *
     * @return \com\aliyun\cloudservice\ots2\CapacityUnit
     */
    public function getCapacityUnit(){
      return $this->_get(1);
    }
    
    /**
     * Set <capacity_unit> value
     *
     * @param \com\aliyun\cloudservice\ots2\CapacityUnit $value
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughputDetails
     */
    public function setCapacityUnit(\com\aliyun\cloudservice\ots2\CapacityUnit $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <last_increase_time> has a value
     *
     * @return boolean
     */
    public function hasLastIncreaseTime(){
      return $this->_has(2);
    }
    
    /**
     * Clear <last_increase_time> value
     *
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughputDetails
     */
    public function clearLastIncreaseTime(){
      return $this->_clear(2);
    }
    
    /**
     * Get <last_increase_time> value
     *
     * @return int
     */
    public function getLastIncreaseTime(){
      return $this->_get(2);
    }
    
    /**
     * Set <last_increase_time> value
     *
     * @param int $value
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughputDetails
     */
    public function setLastIncreaseTime( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <last_decrease_time> has a value
     *
     * @return boolean
     */
    public function hasLastDecreaseTime(){
      return $this->_has(3);
    }
    
    /**
     * Clear <last_decrease_time> value
     *
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughputDetails
     */
    public function clearLastDecreaseTime(){
      return $this->_clear(3);
    }
    
    /**
     * Get <last_decrease_time> value
     *
     * @return int
     */
    public function getLastDecreaseTime(){
      return $this->_get(3);
    }
    
    /**
     * Set <last_decrease_time> value
     *
     * @param int $value
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughputDetails
     */
    public function setLastDecreaseTime( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <number_of_decreases_today> has a value
     *
     * @return boolean
     */
    public function hasNumberOfDecreasesToday(){
      return $this->_has(4);
    }
    
    /**
     * Clear <number_of_decreases_today> value
     *
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughputDetails
     */
    public function clearNumberOfDecreasesToday(){
      return $this->_clear(4);
    }
    
    /**
     * Get <number_of_decreases_today> value
     *
     * @return int
     */
    public function getNumberOfDecreasesToday(){
      return $this->_get(4);
    }
    
    /**
     * Set <number_of_decreases_today> value
     *
     * @param int $value
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughputDetails
     */
    public function setNumberOfDecreasesToday( $value){
      return $this->_set(4, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class ReservedThroughput extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\CapacityUnit */
    public $capacity_unit = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.ReservedThroughput');

      // REQUIRED MESSAGE capacity_unit = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "capacity_unit";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\CapacityUnit';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <capacity_unit> has a value
     *
     * @return boolean
     */
    public function hasCapacityUnit(){
      return $this->_has(1);
    }
    
    /**
     * Clear <capacity_unit> value
     *
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughput
     */
    public function clearCapacityUnit(){
      return $this->_clear(1);
    }
    
    /**
     * Get <capacity_unit> value
     *
     * @return \com\aliyun\cloudservice\ots2\CapacityUnit
     */
    public function getCapacityUnit(){
      return $this->_get(1);
    }
    
    /**
     * Set <capacity_unit> value
     *
     * @param \com\aliyun\cloudservice\ots2\CapacityUnit $value
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughput
     */
    public function setCapacityUnit(\com\aliyun\cloudservice\ots2\CapacityUnit $value){
      return $this->_set(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class ConsumedCapacity extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\CapacityUnit */
    public $capacity_unit = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.ConsumedCapacity');

      // REQUIRED MESSAGE capacity_unit = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "capacity_unit";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\CapacityUnit';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <capacity_unit> has a value
     *
     * @return boolean
     */
    public function hasCapacityUnit(){
      return $this->_has(1);
    }
    
    /**
     * Clear <capacity_unit> value
     *
     * @return \com\aliyun\cloudservice\ots2\ConsumedCapacity
     */
    public function clearCapacityUnit(){
      return $this->_clear(1);
    }
    
    /**
     * Get <capacity_unit> value
     *
     * @return \com\aliyun\cloudservice\ots2\CapacityUnit
     */
    public function getCapacityUnit(){
      return $this->_get(1);
    }
    
    /**
     * Set <capacity_unit> value
     *
     * @param \com\aliyun\cloudservice\ots2\CapacityUnit $value
     * @return \com\aliyun\cloudservice\ots2\ConsumedCapacity
     */
    public function setCapacityUnit(\com\aliyun\cloudservice\ots2\CapacityUnit $value){
      return $this->_set(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class CreateTableRequest extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\TableMeta */
    public $table_meta = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\ReservedThroughput */
    public $reserved_throughput = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.CreateTableRequest');

      // REQUIRED MESSAGE table_meta = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_meta";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\TableMeta';
      $descriptor->addField($f);

      // REQUIRED MESSAGE reserved_throughput = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "reserved_throughput";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ReservedThroughput';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_meta> has a value
     *
     * @return boolean
     */
    public function hasTableMeta(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_meta> value
     *
     * @return \com\aliyun\cloudservice\ots2\CreateTableRequest
     */
    public function clearTableMeta(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_meta> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableMeta
     */
    public function getTableMeta(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_meta> value
     *
     * @param \com\aliyun\cloudservice\ots2\TableMeta $value
     * @return \com\aliyun\cloudservice\ots2\CreateTableRequest
     */
    public function setTableMeta(\com\aliyun\cloudservice\ots2\TableMeta $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <reserved_throughput> has a value
     *
     * @return boolean
     */
    public function hasReservedThroughput(){
      return $this->_has(2);
    }
    
    /**
     * Clear <reserved_throughput> value
     *
     * @return \com\aliyun\cloudservice\ots2\CreateTableRequest
     */
    public function clearReservedThroughput(){
      return $this->_clear(2);
    }
    
    /**
     * Get <reserved_throughput> value
     *
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughput
     */
    public function getReservedThroughput(){
      return $this->_get(2);
    }
    
    /**
     * Set <reserved_throughput> value
     *
     * @param \com\aliyun\cloudservice\ots2\ReservedThroughput $value
     * @return \com\aliyun\cloudservice\ots2\CreateTableRequest
     */
    public function setReservedThroughput(\com\aliyun\cloudservice\ots2\ReservedThroughput $value){
      return $this->_set(2, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class CreateTableResponse extends \DrSlump\Protobuf\Message {


    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.CreateTableResponse');

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class UpdateTableRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\ReservedThroughput */
    public $reserved_throughput = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.UpdateTableRequest');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED MESSAGE reserved_throughput = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "reserved_throughput";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ReservedThroughput';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\UpdateTableRequest
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\UpdateTableRequest
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <reserved_throughput> has a value
     *
     * @return boolean
     */
    public function hasReservedThroughput(){
      return $this->_has(2);
    }
    
    /**
     * Clear <reserved_throughput> value
     *
     * @return \com\aliyun\cloudservice\ots2\UpdateTableRequest
     */
    public function clearReservedThroughput(){
      return $this->_clear(2);
    }
    
    /**
     * Get <reserved_throughput> value
     *
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughput
     */
    public function getReservedThroughput(){
      return $this->_get(2);
    }
    
    /**
     * Set <reserved_throughput> value
     *
     * @param \com\aliyun\cloudservice\ots2\ReservedThroughput $value
     * @return \com\aliyun\cloudservice\ots2\UpdateTableRequest
     */
    public function setReservedThroughput(\com\aliyun\cloudservice\ots2\ReservedThroughput $value){
      return $this->_set(2, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class UpdateTableResponse extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\ReservedThroughputDetails */
    public $reserved_throughput_details = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.UpdateTableResponse');

      // REQUIRED MESSAGE reserved_throughput_details = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "reserved_throughput_details";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ReservedThroughputDetails';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <reserved_throughput_details> has a value
     *
     * @return boolean
     */
    public function hasReservedThroughputDetails(){
      return $this->_has(1);
    }
    
    /**
     * Clear <reserved_throughput_details> value
     *
     * @return \com\aliyun\cloudservice\ots2\UpdateTableResponse
     */
    public function clearReservedThroughputDetails(){
      return $this->_clear(1);
    }
    
    /**
     * Get <reserved_throughput_details> value
     *
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughputDetails
     */
    public function getReservedThroughputDetails(){
      return $this->_get(1);
    }
    
    /**
     * Set <reserved_throughput_details> value
     *
     * @param \com\aliyun\cloudservice\ots2\ReservedThroughputDetails $value
     * @return \com\aliyun\cloudservice\ots2\UpdateTableResponse
     */
    public function setReservedThroughputDetails(\com\aliyun\cloudservice\ots2\ReservedThroughputDetails $value){
      return $this->_set(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class DescribeTableRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.DescribeTableRequest');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\DescribeTableRequest
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\DescribeTableRequest
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class DescribeTableResponse extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\TableMeta */
    public $table_meta = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\ReservedThroughputDetails */
    public $reserved_throughput_details = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.DescribeTableResponse');

      // REQUIRED MESSAGE table_meta = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_meta";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\TableMeta';
      $descriptor->addField($f);

      // REQUIRED MESSAGE reserved_throughput_details = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "reserved_throughput_details";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ReservedThroughputDetails';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_meta> has a value
     *
     * @return boolean
     */
    public function hasTableMeta(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_meta> value
     *
     * @return \com\aliyun\cloudservice\ots2\DescribeTableResponse
     */
    public function clearTableMeta(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_meta> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableMeta
     */
    public function getTableMeta(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_meta> value
     *
     * @param \com\aliyun\cloudservice\ots2\TableMeta $value
     * @return \com\aliyun\cloudservice\ots2\DescribeTableResponse
     */
    public function setTableMeta(\com\aliyun\cloudservice\ots2\TableMeta $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <reserved_throughput_details> has a value
     *
     * @return boolean
     */
    public function hasReservedThroughputDetails(){
      return $this->_has(2);
    }
    
    /**
     * Clear <reserved_throughput_details> value
     *
     * @return \com\aliyun\cloudservice\ots2\DescribeTableResponse
     */
    public function clearReservedThroughputDetails(){
      return $this->_clear(2);
    }
    
    /**
     * Get <reserved_throughput_details> value
     *
     * @return \com\aliyun\cloudservice\ots2\ReservedThroughputDetails
     */
    public function getReservedThroughputDetails(){
      return $this->_get(2);
    }
    
    /**
     * Set <reserved_throughput_details> value
     *
     * @param \com\aliyun\cloudservice\ots2\ReservedThroughputDetails $value
     * @return \com\aliyun\cloudservice\ots2\DescribeTableResponse
     */
    public function setReservedThroughputDetails(\com\aliyun\cloudservice\ots2\ReservedThroughputDetails $value){
      return $this->_set(2, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class ListTableRequest extends \DrSlump\Protobuf\Message {


    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.ListTableRequest');

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class ListTableResponse extends \DrSlump\Protobuf\Message {

    /**  @var string[]  */
    public $table_names = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.ListTableResponse');

      // REPEATED STRING table_names = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_names";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_names> has a value
     *
     * @return boolean
     */
    public function hasTableNames(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_names> value
     *
     * @return \com\aliyun\cloudservice\ots2\ListTableResponse
     */
    public function clearTableNames(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_names> value
     *
     * @param int $idx
     * @return string
     */
    public function getTableNames($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <table_names> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\ListTableResponse
     */
    public function setTableNames( $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <table_names>
     *
     * @return string[]
     */
    public function getTableNamesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <table_names>
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\ListTableResponse
     */
    public function addTableNames( $value){
     return $this->_add(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class DeleteTableRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.DeleteTableRequest');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\DeleteTableRequest
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\DeleteTableRequest
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class DeleteTableResponse extends \DrSlump\Protobuf\Message {


    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.DeleteTableResponse');

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class GetRowRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $primary_key = array();
    
    /**  @var string[]  */
    public $columns_to_get = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.GetRowRequest');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REPEATED MESSAGE primary_key = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "primary_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      // REPEATED STRING columns_to_get = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "columns_to_get";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRowRequest
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\GetRowRequest
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <primary_key> has a value
     *
     * @return boolean
     */
    public function hasPrimaryKey(){
      return $this->_has(2);
    }
    
    /**
     * Clear <primary_key> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRowRequest
     */
    public function clearPrimaryKey(){
      return $this->_clear(2);
    }
    
    /**
     * Get <primary_key> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getPrimaryKey($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <primary_key> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\GetRowRequest
     */
    public function setPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <primary_key>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getPrimaryKeyList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <primary_key>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\GetRowRequest
     */
    public function addPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <columns_to_get> has a value
     *
     * @return boolean
     */
    public function hasColumnsToGet(){
      return $this->_has(3);
    }
    
    /**
     * Clear <columns_to_get> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRowRequest
     */
    public function clearColumnsToGet(){
      return $this->_clear(3);
    }
    
    /**
     * Get <columns_to_get> value
     *
     * @param int $idx
     * @return string
     */
    public function getColumnsToGet($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <columns_to_get> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\GetRowRequest
     */
    public function setColumnsToGet( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <columns_to_get>
     *
     * @return string[]
     */
    public function getColumnsToGetList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <columns_to_get>
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\GetRowRequest
     */
    public function addColumnsToGet( $value){
     return $this->_add(3, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class GetRowResponse extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\ConsumedCapacity */
    public $consumed = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Row */
    public $row = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.GetRowResponse');

      // REQUIRED MESSAGE consumed = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "consumed";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ConsumedCapacity';
      $descriptor->addField($f);

      // REQUIRED MESSAGE row = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "row";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Row';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <consumed> has a value
     *
     * @return boolean
     */
    public function hasConsumed(){
      return $this->_has(1);
    }
    
    /**
     * Clear <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRowResponse
     */
    public function clearConsumed(){
      return $this->_clear(1);
    }
    
    /**
     * Get <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\ConsumedCapacity
     */
    public function getConsumed(){
      return $this->_get(1);
    }
    
    /**
     * Set <consumed> value
     *
     * @param \com\aliyun\cloudservice\ots2\ConsumedCapacity $value
     * @return \com\aliyun\cloudservice\ots2\GetRowResponse
     */
    public function setConsumed(\com\aliyun\cloudservice\ots2\ConsumedCapacity $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <row> has a value
     *
     * @return boolean
     */
    public function hasRow(){
      return $this->_has(2);
    }
    
    /**
     * Clear <row> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRowResponse
     */
    public function clearRow(){
      return $this->_clear(2);
    }
    
    /**
     * Get <row> value
     *
     * @return \com\aliyun\cloudservice\ots2\Row
     */
    public function getRow(){
      return $this->_get(2);
    }
    
    /**
     * Set <row> value
     *
     * @param \com\aliyun\cloudservice\ots2\Row $value
     * @return \com\aliyun\cloudservice\ots2\GetRowResponse
     */
    public function setRow(\com\aliyun\cloudservice\ots2\Row $value){
      return $this->_set(2, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class ColumnUpdate extends \DrSlump\Protobuf\Message {

    /**  @var int - \com\aliyun\cloudservice\ots2\OperationType */
    public $type = null;
    
    /**  @var string */
    public $name = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\ColumnValue */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.ColumnUpdate');

      // REQUIRED ENUM type = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "type";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\OperationType';
      $descriptor->addField($f);

      // REQUIRED STRING name = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\com\aliyun\cloudservice\ots2\ColumnValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <type> has a value
     *
     * @return boolean
     */
    public function hasType(){
      return $this->_has(1);
    }
    
    /**
     * Clear <type> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnUpdate
     */
    public function clearType(){
      return $this->_clear(1);
    }
    
    /**
     * Get <type> value
     *
     * @return int - \com\aliyun\cloudservice\ots2\OperationType
     */
    public function getType(){
      return $this->_get(1);
    }
    
    /**
     * Set <type> value
     *
     * @param int - \com\aliyun\cloudservice\ots2\OperationType $value
     * @return \com\aliyun\cloudservice\ots2\ColumnUpdate
     */
    public function setType( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(2);
    }
    
    /**
     * Clear <name> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnUpdate
     */
    public function clearName(){
      return $this->_clear(2);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(2);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\ColumnUpdate
     */
    public function setName( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(3);
    }
    
    /**
     * Clear <value> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnUpdate
     */
    public function clearValue(){
      return $this->_clear(3);
    }
    
    /**
     * Get <value> value
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnValue
     */
    public function getValue(){
      return $this->_get(3);
    }
    
    /**
     * Set <value> value
     *
     * @param \com\aliyun\cloudservice\ots2\ColumnValue $value
     * @return \com\aliyun\cloudservice\ots2\ColumnUpdate
     */
    public function setValue(\com\aliyun\cloudservice\ots2\ColumnValue $value){
      return $this->_set(3, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class UpdateRowRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Condition */
    public $condition = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $primary_key = array();
    
    /**  @var \com\aliyun\cloudservice\ots2\ColumnUpdate[]  */
    public $attribute_columns = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.UpdateRowRequest');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED MESSAGE condition = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "condition";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Condition';
      $descriptor->addField($f);

      // REPEATED MESSAGE primary_key = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "primary_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      // REPEATED MESSAGE attribute_columns = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "attribute_columns";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ColumnUpdate';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\UpdateRowRequest
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\UpdateRowRequest
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <condition> has a value
     *
     * @return boolean
     */
    public function hasCondition(){
      return $this->_has(2);
    }
    
    /**
     * Clear <condition> value
     *
     * @return \com\aliyun\cloudservice\ots2\UpdateRowRequest
     */
    public function clearCondition(){
      return $this->_clear(2);
    }
    
    /**
     * Get <condition> value
     *
     * @return \com\aliyun\cloudservice\ots2\Condition
     */
    public function getCondition(){
      return $this->_get(2);
    }
    
    /**
     * Set <condition> value
     *
     * @param \com\aliyun\cloudservice\ots2\Condition $value
     * @return \com\aliyun\cloudservice\ots2\UpdateRowRequest
     */
    public function setCondition(\com\aliyun\cloudservice\ots2\Condition $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <primary_key> has a value
     *
     * @return boolean
     */
    public function hasPrimaryKey(){
      return $this->_has(3);
    }
    
    /**
     * Clear <primary_key> value
     *
     * @return \com\aliyun\cloudservice\ots2\UpdateRowRequest
     */
    public function clearPrimaryKey(){
      return $this->_clear(3);
    }
    
    /**
     * Get <primary_key> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getPrimaryKey($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <primary_key> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\UpdateRowRequest
     */
    public function setPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <primary_key>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getPrimaryKeyList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <primary_key>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\UpdateRowRequest
     */
    public function addPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <attribute_columns> has a value
     *
     * @return boolean
     */
    public function hasAttributeColumns(){
      return $this->_has(4);
    }
    
    /**
     * Clear <attribute_columns> value
     *
     * @return \com\aliyun\cloudservice\ots2\UpdateRowRequest
     */
    public function clearAttributeColumns(){
      return $this->_clear(4);
    }
    
    /**
     * Get <attribute_columns> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\ColumnUpdate
     */
    public function getAttributeColumns($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <attribute_columns> value
     *
     * @param \com\aliyun\cloudservice\ots2\ColumnUpdate $value
     * @return \com\aliyun\cloudservice\ots2\UpdateRowRequest
     */
    public function setAttributeColumns(\com\aliyun\cloudservice\ots2\ColumnUpdate $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <attribute_columns>
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnUpdate[]
     */
    public function getAttributeColumnsList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <attribute_columns>
     *
     * @param \com\aliyun\cloudservice\ots2\ColumnUpdate $value
     * @return \com\aliyun\cloudservice\ots2\UpdateRowRequest
     */
    public function addAttributeColumns(\com\aliyun\cloudservice\ots2\ColumnUpdate $value){
     return $this->_add(4, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class UpdateRowResponse extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\ConsumedCapacity */
    public $consumed = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.UpdateRowResponse');

      // REQUIRED MESSAGE consumed = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "consumed";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ConsumedCapacity';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <consumed> has a value
     *
     * @return boolean
     */
    public function hasConsumed(){
      return $this->_has(1);
    }
    
    /**
     * Clear <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\UpdateRowResponse
     */
    public function clearConsumed(){
      return $this->_clear(1);
    }
    
    /**
     * Get <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\ConsumedCapacity
     */
    public function getConsumed(){
      return $this->_get(1);
    }
    
    /**
     * Set <consumed> value
     *
     * @param \com\aliyun\cloudservice\ots2\ConsumedCapacity $value
     * @return \com\aliyun\cloudservice\ots2\UpdateRowResponse
     */
    public function setConsumed(\com\aliyun\cloudservice\ots2\ConsumedCapacity $value){
      return $this->_set(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class PutRowRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Condition */
    public $condition = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $primary_key = array();
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $attribute_columns = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.PutRowRequest');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED MESSAGE condition = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "condition";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Condition';
      $descriptor->addField($f);

      // REPEATED MESSAGE primary_key = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "primary_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      // REPEATED MESSAGE attribute_columns = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "attribute_columns";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\PutRowRequest
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\PutRowRequest
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <condition> has a value
     *
     * @return boolean
     */
    public function hasCondition(){
      return $this->_has(2);
    }
    
    /**
     * Clear <condition> value
     *
     * @return \com\aliyun\cloudservice\ots2\PutRowRequest
     */
    public function clearCondition(){
      return $this->_clear(2);
    }
    
    /**
     * Get <condition> value
     *
     * @return \com\aliyun\cloudservice\ots2\Condition
     */
    public function getCondition(){
      return $this->_get(2);
    }
    
    /**
     * Set <condition> value
     *
     * @param \com\aliyun\cloudservice\ots2\Condition $value
     * @return \com\aliyun\cloudservice\ots2\PutRowRequest
     */
    public function setCondition(\com\aliyun\cloudservice\ots2\Condition $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <primary_key> has a value
     *
     * @return boolean
     */
    public function hasPrimaryKey(){
      return $this->_has(3);
    }
    
    /**
     * Clear <primary_key> value
     *
     * @return \com\aliyun\cloudservice\ots2\PutRowRequest
     */
    public function clearPrimaryKey(){
      return $this->_clear(3);
    }
    
    /**
     * Get <primary_key> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getPrimaryKey($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <primary_key> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\PutRowRequest
     */
    public function setPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <primary_key>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getPrimaryKeyList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <primary_key>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\PutRowRequest
     */
    public function addPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <attribute_columns> has a value
     *
     * @return boolean
     */
    public function hasAttributeColumns(){
      return $this->_has(4);
    }
    
    /**
     * Clear <attribute_columns> value
     *
     * @return \com\aliyun\cloudservice\ots2\PutRowRequest
     */
    public function clearAttributeColumns(){
      return $this->_clear(4);
    }
    
    /**
     * Get <attribute_columns> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getAttributeColumns($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <attribute_columns> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\PutRowRequest
     */
    public function setAttributeColumns(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <attribute_columns>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getAttributeColumnsList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <attribute_columns>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\PutRowRequest
     */
    public function addAttributeColumns(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(4, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class PutRowResponse extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\ConsumedCapacity */
    public $consumed = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.PutRowResponse');

      // REQUIRED MESSAGE consumed = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "consumed";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ConsumedCapacity';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <consumed> has a value
     *
     * @return boolean
     */
    public function hasConsumed(){
      return $this->_has(1);
    }
    
    /**
     * Clear <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\PutRowResponse
     */
    public function clearConsumed(){
      return $this->_clear(1);
    }
    
    /**
     * Get <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\ConsumedCapacity
     */
    public function getConsumed(){
      return $this->_get(1);
    }
    
    /**
     * Set <consumed> value
     *
     * @param \com\aliyun\cloudservice\ots2\ConsumedCapacity $value
     * @return \com\aliyun\cloudservice\ots2\PutRowResponse
     */
    public function setConsumed(\com\aliyun\cloudservice\ots2\ConsumedCapacity $value){
      return $this->_set(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class DeleteRowRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Condition */
    public $condition = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $primary_key = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.DeleteRowRequest');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED MESSAGE condition = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "condition";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Condition';
      $descriptor->addField($f);

      // REPEATED MESSAGE primary_key = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "primary_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\DeleteRowRequest
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\DeleteRowRequest
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <condition> has a value
     *
     * @return boolean
     */
    public function hasCondition(){
      return $this->_has(2);
    }
    
    /**
     * Clear <condition> value
     *
     * @return \com\aliyun\cloudservice\ots2\DeleteRowRequest
     */
    public function clearCondition(){
      return $this->_clear(2);
    }
    
    /**
     * Get <condition> value
     *
     * @return \com\aliyun\cloudservice\ots2\Condition
     */
    public function getCondition(){
      return $this->_get(2);
    }
    
    /**
     * Set <condition> value
     *
     * @param \com\aliyun\cloudservice\ots2\Condition $value
     * @return \com\aliyun\cloudservice\ots2\DeleteRowRequest
     */
    public function setCondition(\com\aliyun\cloudservice\ots2\Condition $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <primary_key> has a value
     *
     * @return boolean
     */
    public function hasPrimaryKey(){
      return $this->_has(3);
    }
    
    /**
     * Clear <primary_key> value
     *
     * @return \com\aliyun\cloudservice\ots2\DeleteRowRequest
     */
    public function clearPrimaryKey(){
      return $this->_clear(3);
    }
    
    /**
     * Get <primary_key> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getPrimaryKey($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <primary_key> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\DeleteRowRequest
     */
    public function setPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <primary_key>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getPrimaryKeyList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <primary_key>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\DeleteRowRequest
     */
    public function addPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(3, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class DeleteRowResponse extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\ConsumedCapacity */
    public $consumed = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.DeleteRowResponse');

      // REQUIRED MESSAGE consumed = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "consumed";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ConsumedCapacity';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <consumed> has a value
     *
     * @return boolean
     */
    public function hasConsumed(){
      return $this->_has(1);
    }
    
    /**
     * Clear <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\DeleteRowResponse
     */
    public function clearConsumed(){
      return $this->_clear(1);
    }
    
    /**
     * Get <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\ConsumedCapacity
     */
    public function getConsumed(){
      return $this->_get(1);
    }
    
    /**
     * Set <consumed> value
     *
     * @param \com\aliyun\cloudservice\ots2\ConsumedCapacity $value
     * @return \com\aliyun\cloudservice\ots2\DeleteRowResponse
     */
    public function setConsumed(\com\aliyun\cloudservice\ots2\ConsumedCapacity $value){
      return $this->_set(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class RowInBatchGetRowRequest extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $primary_key = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.RowInBatchGetRowRequest');

      // REPEATED MESSAGE primary_key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "primary_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <primary_key> has a value
     *
     * @return boolean
     */
    public function hasPrimaryKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <primary_key> value
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowRequest
     */
    public function clearPrimaryKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <primary_key> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getPrimaryKey($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <primary_key> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowRequest
     */
    public function setPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <primary_key>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getPrimaryKeyList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <primary_key>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowRequest
     */
    public function addPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class TableInBatchGetRowRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\RowInBatchGetRowRequest[]  */
    public $rows = array();
    
    /**  @var string[]  */
    public $columns_to_get = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.TableInBatchGetRowRequest');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REPEATED MESSAGE rows = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\RowInBatchGetRowRequest';
      $descriptor->addField($f);

      // REPEATED STRING columns_to_get = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "columns_to_get";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <rows> has a value
     *
     * @return boolean
     */
    public function hasRows(){
      return $this->_has(2);
    }
    
    /**
     * Clear <rows> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest
     */
    public function clearRows(){
      return $this->_clear(2);
    }
    
    /**
     * Get <rows> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowRequest
     */
    public function getRows($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <rows> value
     *
     * @param \com\aliyun\cloudservice\ots2\RowInBatchGetRowRequest $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest
     */
    public function setRows(\com\aliyun\cloudservice\ots2\RowInBatchGetRowRequest $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <rows>
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowRequest[]
     */
    public function getRowsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <rows>
     *
     * @param \com\aliyun\cloudservice\ots2\RowInBatchGetRowRequest $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest
     */
    public function addRows(\com\aliyun\cloudservice\ots2\RowInBatchGetRowRequest $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <columns_to_get> has a value
     *
     * @return boolean
     */
    public function hasColumnsToGet(){
      return $this->_has(3);
    }
    
    /**
     * Clear <columns_to_get> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest
     */
    public function clearColumnsToGet(){
      return $this->_clear(3);
    }
    
    /**
     * Get <columns_to_get> value
     *
     * @param int $idx
     * @return string
     */
    public function getColumnsToGet($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <columns_to_get> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest
     */
    public function setColumnsToGet( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <columns_to_get>
     *
     * @return string[]
     */
    public function getColumnsToGetList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <columns_to_get>
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest
     */
    public function addColumnsToGet( $value){
     return $this->_add(3, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class BatchGetRowRequest extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest[]  */
    public $tables = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.BatchGetRowRequest');

      // REPEATED MESSAGE tables = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "tables";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <tables> has a value
     *
     * @return boolean
     */
    public function hasTables(){
      return $this->_has(1);
    }
    
    /**
     * Clear <tables> value
     *
     * @return \com\aliyun\cloudservice\ots2\BatchGetRowRequest
     */
    public function clearTables(){
      return $this->_clear(1);
    }
    
    /**
     * Get <tables> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest
     */
    public function getTables($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <tables> value
     *
     * @param \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest $value
     * @return \com\aliyun\cloudservice\ots2\BatchGetRowRequest
     */
    public function setTables(\com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <tables>
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest[]
     */
    public function getTablesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <tables>
     *
     * @param \com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest $value
     * @return \com\aliyun\cloudservice\ots2\BatchGetRowRequest
     */
    public function addTables(\com\aliyun\cloudservice\ots2\TableInBatchGetRowRequest $value){
     return $this->_add(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class RowInBatchGetRowResponse extends \DrSlump\Protobuf\Message {

    /**  @var boolean */
    public $is_ok = true;
    
    /**  @var \com\aliyun\cloudservice\ots2\Error */
    public $error = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\ConsumedCapacity */
    public $consumed = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Row */
    public $row = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.RowInBatchGetRowResponse');

      // REQUIRED BOOL is_ok = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "is_ok";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->default   = true;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE error = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "error";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\com\aliyun\cloudservice\ots2\Error';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE consumed = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "consumed";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\com\aliyun\cloudservice\ots2\ConsumedCapacity';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE row = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "row";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\com\aliyun\cloudservice\ots2\Row';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <is_ok> has a value
     *
     * @return boolean
     */
    public function hasIsOk(){
      return $this->_has(1);
    }
    
    /**
     * Clear <is_ok> value
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse
     */
    public function clearIsOk(){
      return $this->_clear(1);
    }
    
    /**
     * Get <is_ok> value
     *
     * @return boolean
     */
    public function getIsOk(){
      return $this->_get(1);
    }
    
    /**
     * Set <is_ok> value
     *
     * @param boolean $value
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse
     */
    public function setIsOk( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <error> has a value
     *
     * @return boolean
     */
    public function hasError(){
      return $this->_has(2);
    }
    
    /**
     * Clear <error> value
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse
     */
    public function clearError(){
      return $this->_clear(2);
    }
    
    /**
     * Get <error> value
     *
     * @return \com\aliyun\cloudservice\ots2\Error
     */
    public function getError(){
      return $this->_get(2);
    }
    
    /**
     * Set <error> value
     *
     * @param \com\aliyun\cloudservice\ots2\Error $value
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse
     */
    public function setError(\com\aliyun\cloudservice\ots2\Error $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <consumed> has a value
     *
     * @return boolean
     */
    public function hasConsumed(){
      return $this->_has(3);
    }
    
    /**
     * Clear <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse
     */
    public function clearConsumed(){
      return $this->_clear(3);
    }
    
    /**
     * Get <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\ConsumedCapacity
     */
    public function getConsumed(){
      return $this->_get(3);
    }
    
    /**
     * Set <consumed> value
     *
     * @param \com\aliyun\cloudservice\ots2\ConsumedCapacity $value
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse
     */
    public function setConsumed(\com\aliyun\cloudservice\ots2\ConsumedCapacity $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <row> has a value
     *
     * @return boolean
     */
    public function hasRow(){
      return $this->_has(4);
    }
    
    /**
     * Clear <row> value
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse
     */
    public function clearRow(){
      return $this->_clear(4);
    }
    
    /**
     * Get <row> value
     *
     * @return \com\aliyun\cloudservice\ots2\Row
     */
    public function getRow(){
      return $this->_get(4);
    }
    
    /**
     * Set <row> value
     *
     * @param \com\aliyun\cloudservice\ots2\Row $value
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse
     */
    public function setRow(\com\aliyun\cloudservice\ots2\Row $value){
      return $this->_set(4, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class TableInBatchGetRowResponse extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse[]  */
    public $rows = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.TableInBatchGetRowResponse');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REPEATED MESSAGE rows = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <rows> has a value
     *
     * @return boolean
     */
    public function hasRows(){
      return $this->_has(2);
    }
    
    /**
     * Clear <rows> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse
     */
    public function clearRows(){
      return $this->_clear(2);
    }
    
    /**
     * Get <rows> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse
     */
    public function getRows($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <rows> value
     *
     * @param \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse
     */
    public function setRows(\com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <rows>
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse[]
     */
    public function getRowsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <rows>
     *
     * @param \com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse
     */
    public function addRows(\com\aliyun\cloudservice\ots2\RowInBatchGetRowResponse $value){
     return $this->_add(2, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class BatchGetRowResponse extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse[]  */
    public $tables = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.BatchGetRowResponse');

      // REPEATED MESSAGE tables = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "tables";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <tables> has a value
     *
     * @return boolean
     */
    public function hasTables(){
      return $this->_has(1);
    }
    
    /**
     * Clear <tables> value
     *
     * @return \com\aliyun\cloudservice\ots2\BatchGetRowResponse
     */
    public function clearTables(){
      return $this->_clear(1);
    }
    
    /**
     * Get <tables> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse
     */
    public function getTables($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <tables> value
     *
     * @param \com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse $value
     * @return \com\aliyun\cloudservice\ots2\BatchGetRowResponse
     */
    public function setTables(\com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <tables>
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse[]
     */
    public function getTablesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <tables>
     *
     * @param \com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse $value
     * @return \com\aliyun\cloudservice\ots2\BatchGetRowResponse
     */
    public function addTables(\com\aliyun\cloudservice\ots2\TableInBatchGetRowResponse $value){
     return $this->_add(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class PutRowInBatchWriteRowRequest extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\Condition */
    public $condition = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $primary_key = array();
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $attribute_columns = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.PutRowInBatchWriteRowRequest');

      // REQUIRED MESSAGE condition = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "condition";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Condition';
      $descriptor->addField($f);

      // REPEATED MESSAGE primary_key = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "primary_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      // REPEATED MESSAGE attribute_columns = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "attribute_columns";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <condition> has a value
     *
     * @return boolean
     */
    public function hasCondition(){
      return $this->_has(1);
    }
    
    /**
     * Clear <condition> value
     *
     * @return \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest
     */
    public function clearCondition(){
      return $this->_clear(1);
    }
    
    /**
     * Get <condition> value
     *
     * @return \com\aliyun\cloudservice\ots2\Condition
     */
    public function getCondition(){
      return $this->_get(1);
    }
    
    /**
     * Set <condition> value
     *
     * @param \com\aliyun\cloudservice\ots2\Condition $value
     * @return \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest
     */
    public function setCondition(\com\aliyun\cloudservice\ots2\Condition $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <primary_key> has a value
     *
     * @return boolean
     */
    public function hasPrimaryKey(){
      return $this->_has(2);
    }
    
    /**
     * Clear <primary_key> value
     *
     * @return \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest
     */
    public function clearPrimaryKey(){
      return $this->_clear(2);
    }
    
    /**
     * Get <primary_key> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getPrimaryKey($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <primary_key> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest
     */
    public function setPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <primary_key>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getPrimaryKeyList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <primary_key>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest
     */
    public function addPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <attribute_columns> has a value
     *
     * @return boolean
     */
    public function hasAttributeColumns(){
      return $this->_has(3);
    }
    
    /**
     * Clear <attribute_columns> value
     *
     * @return \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest
     */
    public function clearAttributeColumns(){
      return $this->_clear(3);
    }
    
    /**
     * Get <attribute_columns> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getAttributeColumns($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <attribute_columns> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest
     */
    public function setAttributeColumns(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <attribute_columns>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getAttributeColumnsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <attribute_columns>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest
     */
    public function addAttributeColumns(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(3, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class UpdateRowInBatchWriteRowRequest extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\Condition */
    public $condition = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $primary_key = array();
    
    /**  @var \com\aliyun\cloudservice\ots2\ColumnUpdate[]  */
    public $attribute_columns = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.UpdateRowInBatchWriteRowRequest');

      // REQUIRED MESSAGE condition = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "condition";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Condition';
      $descriptor->addField($f);

      // REPEATED MESSAGE primary_key = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "primary_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      // REPEATED MESSAGE attribute_columns = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "attribute_columns";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ColumnUpdate';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <condition> has a value
     *
     * @return boolean
     */
    public function hasCondition(){
      return $this->_has(1);
    }
    
    /**
     * Clear <condition> value
     *
     * @return \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest
     */
    public function clearCondition(){
      return $this->_clear(1);
    }
    
    /**
     * Get <condition> value
     *
     * @return \com\aliyun\cloudservice\ots2\Condition
     */
    public function getCondition(){
      return $this->_get(1);
    }
    
    /**
     * Set <condition> value
     *
     * @param \com\aliyun\cloudservice\ots2\Condition $value
     * @return \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest
     */
    public function setCondition(\com\aliyun\cloudservice\ots2\Condition $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <primary_key> has a value
     *
     * @return boolean
     */
    public function hasPrimaryKey(){
      return $this->_has(2);
    }
    
    /**
     * Clear <primary_key> value
     *
     * @return \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest
     */
    public function clearPrimaryKey(){
      return $this->_clear(2);
    }
    
    /**
     * Get <primary_key> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getPrimaryKey($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <primary_key> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest
     */
    public function setPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <primary_key>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getPrimaryKeyList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <primary_key>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest
     */
    public function addPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <attribute_columns> has a value
     *
     * @return boolean
     */
    public function hasAttributeColumns(){
      return $this->_has(3);
    }
    
    /**
     * Clear <attribute_columns> value
     *
     * @return \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest
     */
    public function clearAttributeColumns(){
      return $this->_clear(3);
    }
    
    /**
     * Get <attribute_columns> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\ColumnUpdate
     */
    public function getAttributeColumns($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <attribute_columns> value
     *
     * @param \com\aliyun\cloudservice\ots2\ColumnUpdate $value
     * @return \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest
     */
    public function setAttributeColumns(\com\aliyun\cloudservice\ots2\ColumnUpdate $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <attribute_columns>
     *
     * @return \com\aliyun\cloudservice\ots2\ColumnUpdate[]
     */
    public function getAttributeColumnsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <attribute_columns>
     *
     * @param \com\aliyun\cloudservice\ots2\ColumnUpdate $value
     * @return \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest
     */
    public function addAttributeColumns(\com\aliyun\cloudservice\ots2\ColumnUpdate $value){
     return $this->_add(3, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class DeleteRowInBatchWriteRowRequest extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\Condition */
    public $condition = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $primary_key = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.DeleteRowInBatchWriteRowRequest');

      // REQUIRED MESSAGE condition = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "condition";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Condition';
      $descriptor->addField($f);

      // REPEATED MESSAGE primary_key = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "primary_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <condition> has a value
     *
     * @return boolean
     */
    public function hasCondition(){
      return $this->_has(1);
    }
    
    /**
     * Clear <condition> value
     *
     * @return \com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest
     */
    public function clearCondition(){
      return $this->_clear(1);
    }
    
    /**
     * Get <condition> value
     *
     * @return \com\aliyun\cloudservice\ots2\Condition
     */
    public function getCondition(){
      return $this->_get(1);
    }
    
    /**
     * Set <condition> value
     *
     * @param \com\aliyun\cloudservice\ots2\Condition $value
     * @return \com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest
     */
    public function setCondition(\com\aliyun\cloudservice\ots2\Condition $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <primary_key> has a value
     *
     * @return boolean
     */
    public function hasPrimaryKey(){
      return $this->_has(2);
    }
    
    /**
     * Clear <primary_key> value
     *
     * @return \com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest
     */
    public function clearPrimaryKey(){
      return $this->_clear(2);
    }
    
    /**
     * Get <primary_key> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getPrimaryKey($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <primary_key> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest
     */
    public function setPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <primary_key>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getPrimaryKeyList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <primary_key>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest
     */
    public function addPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(2, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class TableInBatchWriteRowRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest[]  */
    public $put_rows = array();
    
    /**  @var \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest[]  */
    public $update_rows = array();
    
    /**  @var \com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest[]  */
    public $delete_rows = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.TableInBatchWriteRowRequest');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REPEATED MESSAGE put_rows = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "put_rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest';
      $descriptor->addField($f);

      // REPEATED MESSAGE update_rows = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "update_rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest';
      $descriptor->addField($f);

      // REPEATED MESSAGE delete_rows = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "delete_rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <put_rows> has a value
     *
     * @return boolean
     */
    public function hasPutRows(){
      return $this->_has(2);
    }
    
    /**
     * Clear <put_rows> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest
     */
    public function clearPutRows(){
      return $this->_clear(2);
    }
    
    /**
     * Get <put_rows> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest
     */
    public function getPutRows($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <put_rows> value
     *
     * @param \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest
     */
    public function setPutRows(\com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <put_rows>
     *
     * @return \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest[]
     */
    public function getPutRowsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <put_rows>
     *
     * @param \com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest
     */
    public function addPutRows(\com\aliyun\cloudservice\ots2\PutRowInBatchWriteRowRequest $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <update_rows> has a value
     *
     * @return boolean
     */
    public function hasUpdateRows(){
      return $this->_has(3);
    }
    
    /**
     * Clear <update_rows> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest
     */
    public function clearUpdateRows(){
      return $this->_clear(3);
    }
    
    /**
     * Get <update_rows> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest
     */
    public function getUpdateRows($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <update_rows> value
     *
     * @param \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest
     */
    public function setUpdateRows(\com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <update_rows>
     *
     * @return \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest[]
     */
    public function getUpdateRowsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <update_rows>
     *
     * @param \com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest
     */
    public function addUpdateRows(\com\aliyun\cloudservice\ots2\UpdateRowInBatchWriteRowRequest $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <delete_rows> has a value
     *
     * @return boolean
     */
    public function hasDeleteRows(){
      return $this->_has(4);
    }
    
    /**
     * Clear <delete_rows> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest
     */
    public function clearDeleteRows(){
      return $this->_clear(4);
    }
    
    /**
     * Get <delete_rows> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest
     */
    public function getDeleteRows($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <delete_rows> value
     *
     * @param \com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest
     */
    public function setDeleteRows(\com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <delete_rows>
     *
     * @return \com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest[]
     */
    public function getDeleteRowsList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <delete_rows>
     *
     * @param \com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest
     */
    public function addDeleteRows(\com\aliyun\cloudservice\ots2\DeleteRowInBatchWriteRowRequest $value){
     return $this->_add(4, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class BatchWriteRowRequest extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest[]  */
    public $tables = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.BatchWriteRowRequest');

      // REPEATED MESSAGE tables = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "tables";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <tables> has a value
     *
     * @return boolean
     */
    public function hasTables(){
      return $this->_has(1);
    }
    
    /**
     * Clear <tables> value
     *
     * @return \com\aliyun\cloudservice\ots2\BatchWriteRowRequest
     */
    public function clearTables(){
      return $this->_clear(1);
    }
    
    /**
     * Get <tables> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest
     */
    public function getTables($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <tables> value
     *
     * @param \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest $value
     * @return \com\aliyun\cloudservice\ots2\BatchWriteRowRequest
     */
    public function setTables(\com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <tables>
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest[]
     */
    public function getTablesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <tables>
     *
     * @param \com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest $value
     * @return \com\aliyun\cloudservice\ots2\BatchWriteRowRequest
     */
    public function addTables(\com\aliyun\cloudservice\ots2\TableInBatchWriteRowRequest $value){
     return $this->_add(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class RowInBatchWriteRowResponse extends \DrSlump\Protobuf\Message {

    /**  @var boolean */
    public $is_ok = true;
    
    /**  @var \com\aliyun\cloudservice\ots2\Error */
    public $error = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\ConsumedCapacity */
    public $consumed = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.RowInBatchWriteRowResponse');

      // REQUIRED BOOL is_ok = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "is_ok";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->default   = true;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE error = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "error";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\com\aliyun\cloudservice\ots2\Error';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE consumed = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "consumed";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\com\aliyun\cloudservice\ots2\ConsumedCapacity';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <is_ok> has a value
     *
     * @return boolean
     */
    public function hasIsOk(){
      return $this->_has(1);
    }
    
    /**
     * Clear <is_ok> value
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse
     */
    public function clearIsOk(){
      return $this->_clear(1);
    }
    
    /**
     * Get <is_ok> value
     *
     * @return boolean
     */
    public function getIsOk(){
      return $this->_get(1);
    }
    
    /**
     * Set <is_ok> value
     *
     * @param boolean $value
     * @return \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse
     */
    public function setIsOk( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <error> has a value
     *
     * @return boolean
     */
    public function hasError(){
      return $this->_has(2);
    }
    
    /**
     * Clear <error> value
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse
     */
    public function clearError(){
      return $this->_clear(2);
    }
    
    /**
     * Get <error> value
     *
     * @return \com\aliyun\cloudservice\ots2\Error
     */
    public function getError(){
      return $this->_get(2);
    }
    
    /**
     * Set <error> value
     *
     * @param \com\aliyun\cloudservice\ots2\Error $value
     * @return \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse
     */
    public function setError(\com\aliyun\cloudservice\ots2\Error $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <consumed> has a value
     *
     * @return boolean
     */
    public function hasConsumed(){
      return $this->_has(3);
    }
    
    /**
     * Clear <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse
     */
    public function clearConsumed(){
      return $this->_clear(3);
    }
    
    /**
     * Get <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\ConsumedCapacity
     */
    public function getConsumed(){
      return $this->_get(3);
    }
    
    /**
     * Set <consumed> value
     *
     * @param \com\aliyun\cloudservice\ots2\ConsumedCapacity $value
     * @return \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse
     */
    public function setConsumed(\com\aliyun\cloudservice\ots2\ConsumedCapacity $value){
      return $this->_set(3, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class TableInBatchWriteRowResponse extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse[]  */
    public $put_rows = array();
    
    /**  @var \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse[]  */
    public $update_rows = array();
    
    /**  @var \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse[]  */
    public $delete_rows = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.TableInBatchWriteRowResponse');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REPEATED MESSAGE put_rows = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "put_rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse';
      $descriptor->addField($f);

      // REPEATED MESSAGE update_rows = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "update_rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse';
      $descriptor->addField($f);

      // REPEATED MESSAGE delete_rows = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "delete_rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <put_rows> has a value
     *
     * @return boolean
     */
    public function hasPutRows(){
      return $this->_has(2);
    }
    
    /**
     * Clear <put_rows> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse
     */
    public function clearPutRows(){
      return $this->_clear(2);
    }
    
    /**
     * Get <put_rows> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse
     */
    public function getPutRows($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <put_rows> value
     *
     * @param \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse
     */
    public function setPutRows(\com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <put_rows>
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse[]
     */
    public function getPutRowsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <put_rows>
     *
     * @param \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse
     */
    public function addPutRows(\com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <update_rows> has a value
     *
     * @return boolean
     */
    public function hasUpdateRows(){
      return $this->_has(3);
    }
    
    /**
     * Clear <update_rows> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse
     */
    public function clearUpdateRows(){
      return $this->_clear(3);
    }
    
    /**
     * Get <update_rows> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse
     */
    public function getUpdateRows($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <update_rows> value
     *
     * @param \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse
     */
    public function setUpdateRows(\com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <update_rows>
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse[]
     */
    public function getUpdateRowsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <update_rows>
     *
     * @param \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse
     */
    public function addUpdateRows(\com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <delete_rows> has a value
     *
     * @return boolean
     */
    public function hasDeleteRows(){
      return $this->_has(4);
    }
    
    /**
     * Clear <delete_rows> value
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse
     */
    public function clearDeleteRows(){
      return $this->_clear(4);
    }
    
    /**
     * Get <delete_rows> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse
     */
    public function getDeleteRows($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <delete_rows> value
     *
     * @param \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse
     */
    public function setDeleteRows(\com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <delete_rows>
     *
     * @return \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse[]
     */
    public function getDeleteRowsList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <delete_rows>
     *
     * @param \com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse $value
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse
     */
    public function addDeleteRows(\com\aliyun\cloudservice\ots2\RowInBatchWriteRowResponse $value){
     return $this->_add(4, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class BatchWriteRowResponse extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse[]  */
    public $tables = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.BatchWriteRowResponse');

      // REPEATED MESSAGE tables = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "tables";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <tables> has a value
     *
     * @return boolean
     */
    public function hasTables(){
      return $this->_has(1);
    }
    
    /**
     * Clear <tables> value
     *
     * @return \com\aliyun\cloudservice\ots2\BatchWriteRowResponse
     */
    public function clearTables(){
      return $this->_clear(1);
    }
    
    /**
     * Get <tables> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse
     */
    public function getTables($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <tables> value
     *
     * @param \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse $value
     * @return \com\aliyun\cloudservice\ots2\BatchWriteRowResponse
     */
    public function setTables(\com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <tables>
     *
     * @return \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse[]
     */
    public function getTablesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <tables>
     *
     * @param \com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse $value
     * @return \com\aliyun\cloudservice\ots2\BatchWriteRowResponse
     */
    public function addTables(\com\aliyun\cloudservice\ots2\TableInBatchWriteRowResponse $value){
     return $this->_add(1, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class GetRangeRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $table_name = null;
    
    /**  @var int - \com\aliyun\cloudservice\ots2\Direction */
    public $direction = null;
    
    /**  @var string[]  */
    public $columns_to_get = array();
    
    /**  @var int */
    public $limit = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $inclusive_start_primary_key = array();
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $exclusive_end_primary_key = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.GetRangeRequest');

      // REQUIRED STRING table_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "table_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $descriptor->addField($f);

      // REQUIRED ENUM direction = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "direction";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Direction';
      $descriptor->addField($f);

      // REPEATED STRING columns_to_get = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "columns_to_get";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL INT32 limit = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "limit";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE inclusive_start_primary_key = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "inclusive_start_primary_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      // REPEATED MESSAGE exclusive_end_primary_key = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "exclusive_end_primary_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <table_name> has a value
     *
     * @return boolean
     */
    public function hasTableName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <table_name> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function clearTableName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <table_name> value
     *
     * @return string
     */
    public function getTableName(){
      return $this->_get(1);
    }
    
    /**
     * Set <table_name> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function setTableName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <direction> has a value
     *
     * @return boolean
     */
    public function hasDirection(){
      return $this->_has(2);
    }
    
    /**
     * Clear <direction> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function clearDirection(){
      return $this->_clear(2);
    }
    
    /**
     * Get <direction> value
     *
     * @return int - \com\aliyun\cloudservice\ots2\Direction
     */
    public function getDirection(){
      return $this->_get(2);
    }
    
    /**
     * Set <direction> value
     *
     * @param int - \com\aliyun\cloudservice\ots2\Direction $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function setDirection( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <columns_to_get> has a value
     *
     * @return boolean
     */
    public function hasColumnsToGet(){
      return $this->_has(3);
    }
    
    /**
     * Clear <columns_to_get> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function clearColumnsToGet(){
      return $this->_clear(3);
    }
    
    /**
     * Get <columns_to_get> value
     *
     * @param int $idx
     * @return string
     */
    public function getColumnsToGet($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <columns_to_get> value
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function setColumnsToGet( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <columns_to_get>
     *
     * @return string[]
     */
    public function getColumnsToGetList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <columns_to_get>
     *
     * @param string $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function addColumnsToGet( $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <limit> has a value
     *
     * @return boolean
     */
    public function hasLimit(){
      return $this->_has(4);
    }
    
    /**
     * Clear <limit> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function clearLimit(){
      return $this->_clear(4);
    }
    
    /**
     * Get <limit> value
     *
     * @return int
     */
    public function getLimit(){
      return $this->_get(4);
    }
    
    /**
     * Set <limit> value
     *
     * @param int $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function setLimit( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <inclusive_start_primary_key> has a value
     *
     * @return boolean
     */
    public function hasInclusiveStartPrimaryKey(){
      return $this->_has(5);
    }
    
    /**
     * Clear <inclusive_start_primary_key> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function clearInclusiveStartPrimaryKey(){
      return $this->_clear(5);
    }
    
    /**
     * Get <inclusive_start_primary_key> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getInclusiveStartPrimaryKey($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <inclusive_start_primary_key> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function setInclusiveStartPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <inclusive_start_primary_key>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getInclusiveStartPrimaryKeyList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <inclusive_start_primary_key>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function addInclusiveStartPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <exclusive_end_primary_key> has a value
     *
     * @return boolean
     */
    public function hasExclusiveEndPrimaryKey(){
      return $this->_has(6);
    }
    
    /**
     * Clear <exclusive_end_primary_key> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function clearExclusiveEndPrimaryKey(){
      return $this->_clear(6);
    }
    
    /**
     * Get <exclusive_end_primary_key> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getExclusiveEndPrimaryKey($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <exclusive_end_primary_key> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function setExclusiveEndPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <exclusive_end_primary_key>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getExclusiveEndPrimaryKeyList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <exclusive_end_primary_key>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeRequest
     */
    public function addExclusiveEndPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(6, $value);
    }
  }
}

namespace com\aliyun\cloudservice\ots2 {

  class GetRangeResponse extends \DrSlump\Protobuf\Message {

    /**  @var \com\aliyun\cloudservice\ots2\ConsumedCapacity */
    public $consumed = null;
    
    /**  @var \com\aliyun\cloudservice\ots2\Column[]  */
    public $next_start_primary_key = array();
    
    /**  @var \com\aliyun\cloudservice\ots2\Row[]  */
    public $rows = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'com.aliyun.cloudservice.ots2.GetRangeResponse');

      // REQUIRED MESSAGE consumed = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "consumed";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REQUIRED;
      $f->reference = '\com\aliyun\cloudservice\ots2\ConsumedCapacity';
      $descriptor->addField($f);

      // REPEATED MESSAGE next_start_primary_key = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_start_primary_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Column';
      $descriptor->addField($f);

      // REPEATED MESSAGE rows = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "rows";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\com\aliyun\cloudservice\ots2\Row';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <consumed> has a value
     *
     * @return boolean
     */
    public function hasConsumed(){
      return $this->_has(1);
    }
    
    /**
     * Clear <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRangeResponse
     */
    public function clearConsumed(){
      return $this->_clear(1);
    }
    
    /**
     * Get <consumed> value
     *
     * @return \com\aliyun\cloudservice\ots2\ConsumedCapacity
     */
    public function getConsumed(){
      return $this->_get(1);
    }
    
    /**
     * Set <consumed> value
     *
     * @param \com\aliyun\cloudservice\ots2\ConsumedCapacity $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeResponse
     */
    public function setConsumed(\com\aliyun\cloudservice\ots2\ConsumedCapacity $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <next_start_primary_key> has a value
     *
     * @return boolean
     */
    public function hasNextStartPrimaryKey(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_start_primary_key> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRangeResponse
     */
    public function clearNextStartPrimaryKey(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_start_primary_key> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Column
     */
    public function getNextStartPrimaryKey($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <next_start_primary_key> value
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeResponse
     */
    public function setNextStartPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <next_start_primary_key>
     *
     * @return \com\aliyun\cloudservice\ots2\Column[]
     */
    public function getNextStartPrimaryKeyList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <next_start_primary_key>
     *
     * @param \com\aliyun\cloudservice\ots2\Column $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeResponse
     */
    public function addNextStartPrimaryKey(\com\aliyun\cloudservice\ots2\Column $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <rows> has a value
     *
     * @return boolean
     */
    public function hasRows(){
      return $this->_has(3);
    }
    
    /**
     * Clear <rows> value
     *
     * @return \com\aliyun\cloudservice\ots2\GetRangeResponse
     */
    public function clearRows(){
      return $this->_clear(3);
    }
    
    /**
     * Get <rows> value
     *
     * @param int $idx
     * @return \com\aliyun\cloudservice\ots2\Row
     */
    public function getRows($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <rows> value
     *
     * @param \com\aliyun\cloudservice\ots2\Row $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeResponse
     */
    public function setRows(\com\aliyun\cloudservice\ots2\Row $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <rows>
     *
     * @return \com\aliyun\cloudservice\ots2\Row[]
     */
    public function getRowsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <rows>
     *
     * @param \com\aliyun\cloudservice\ots2\Row $value
     * @return \com\aliyun\cloudservice\ots2\GetRangeResponse
     */
    public function addRows(\com\aliyun\cloudservice\ots2\Row $value){
     return $this->_add(3, $value);
    }
  }
}

